@model IEnumerable<TestApp.Models.Contact>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
</head>
<body>

<h1>All contacts:</h1>
<button id="open-modal" type="button" class="btn btn-lg btn-primary">Add new contact</button>
<div id="myModal" class="modal" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
	    <div class="modal-header">
		    <h5 class="modal-title">Add new contact</h5>
		    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
			    <span aria-hidden="true">&times;</span>
		    </button>
	    </div>
	    <form method="post" action="/HomeController/AddContact" class="form-container" onsubmit="return validate();">
		<div class="modal-body">
        <div name="myForm" class="form-popup" id="myForm">
	        
	        <input type='text' name="name" id="name" class='name field' placeholder="Name"/>
	        <input type='text' name="phone" id="phone" class='phone field' placeholder="Phone"/>
	        <input type='text' name="jobTitle" id="jobTitle" class='jobTitle field' placeholder="JobTitle"/>
	        <input type='text' name="birthDate" id="birthDate" class='birthDate field' placeholder="BirthDate"/>
		        
	        </div>
      </div>
	    <div class="modal-footer">
	      <button type="submit" class="btn btn-primary">Add</button>
		    <button type="button" class="btn btn-secondary cancel" data-dismiss="modal">Cancel</button>
	    </div>
	    </form>
    </div>
  </div>
</div>

<div class="row mt-5 mb-2">
	@{

		foreach (var contact in Model)
		{
			<div class="box">
				<h2>@contact.Name</h2>
				<h5>Phone: @contact.MobilePhone</h5>
				<h5>Job title: @contact.JobTitle</h5>
				<h5>Birth date: @contact.BirthDate.ToString("dd/MM/yyyy")</h5>
				<p><a class="btn btn-warning" href="#">Edit</a> <a class="btn btn-warning" href="/HomeController/Delete/{@contact.Id}">Delete</a></p>
			</div>
		}
	}
</div>
</body>
</html>

<script>
 	
	  $(document).ready(function(){
                $("#open-modal").click(function(){
                    $("#myModal").modal('show');
                });
            });
	
	
	const checkPhone = function(Phone){
		return Phone.charAt(0) !== "+" || Phone.length !== 13;
	}
	
	const checkName = function(Name){
		  return Name.length < 2 || Name.charAt(0) !== Name.charAt(0).toUpperCase();
	}
	
	const checkBirthDate = function (BirthDate){
		  return BirthDate.charAt(2) !== "." || BirthDate.charAt(5) !== "." || BirthDate.length !== 10
	}
	
	var generateError = function (text) {
               var error = document.createElement('div')
               error.className = 'error'
               error.style.color = 'red'
               error.innerHTML = text
               return error
           }
    
        
    	
    var removeValidation = function () {
		var form = document.getElementById('myForm')
                var errors = form.querySelectorAll('.error')
            	for (var i = 0; i < errors.length; i++) {
             				errors[i].remove()
             		console.log(errors[i])
             	}
           }
  	
  	function validate() {
		
		console.log("Validate");
		
  		var Name = document.getElementById("name");
  		var Phone = document.getElementById("phone");
  		var JobTitle = document.getElementById("jobTitle");
  		var BirthDate = document.getElementById("birthDate");
		
		removeValidation();
		
		Name.style.border = null;
		Phone.style.border = null;
		JobTitle.style.border = null;
		BirthDate.style.border = null;


  		if(checkName(Name.value)) {
			var error = generateError("Wrong format(example: Vasiliy)")
            Name.parentElement.insertBefore(error, Name)
  			Name.style.border = "2px solid red";
  			return false;
  		}
		
        if(checkPhone(Phone.value)) {
			error = generateError("Wrong format(example: +375291234567)")
            Phone.parentElement.insertBefore(error, Phone)
  			Phone.style.border = "2px solid red";
  			return false;
  		}
		
        if(!JobTitle.value) {
  			JobTitle.style.border = "2px solid red";
  			return false;
  		}
        if(checkBirthDate(BirthDate.value)) {
			error = generateError("Wrong format(example: 01.01.2001)")
            BirthDate.parentElement.insertBefore(error, BirthDate)
  			BirthDate.style.border = "2px solid red";
  			return false;
  		}
  		return true;
  	}

  </script>


<style>


 .bs-example{
            margin: 20px;
        }


.box {
    .block-round-content
    margin: 100px;
    padding: 25px;
    width: 520px;
    height: 260px;
    border: 5px solid black;
    margin-right: 50px;
    margin-bottom: 30px;
    text-align: center;
  }
    
body { background: url("/imgs/fon-nejtralnyj-dlya-sajta_64.jpg"); }

 Добавление стилей в контейнер форм                            @*???????????????????????????????*@
.form-container {
  max-width: 300px;
  padding: 10px;
  background-color: white;
}

/* Поля ввода полной ширины */
.form-container input[type=text], .form-container input[type=password] {
  width: 100%;
  padding: 20px;
  margin: 15px 0 2px 0;
  border: none;
  background: #f1f1f1;
}


/* Установите стиль для кнопки отправить/кнопка */
.form-container .btn {
  background-color: #4CAF50;
  color: white;
  padding: 16px 20px;
  border: none;
  cursor: pointer;
  width: 100%;
  margin-bottom:10px;
  opacity: 0.8;
}

/* Добавьте красный цвет фона к кнопке отмена */
.form-container .cancel {
  background-color: red;
}

/* Добавьте некоторые эффекты наведения на кнопки */
.form-container .btn:hover, .open-button:hover {
  opacity: 1;
}
</style>